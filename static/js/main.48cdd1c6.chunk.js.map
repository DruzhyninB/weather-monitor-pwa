{"version":3,"sources":["config/api.url.js","config/settings.js","api/forecast.js","utl/index.js","components/Sidebar/Sidebar.jsx","store/actions/form.actions.js","components/Sidebar/store/actions/sidebar.action.js","store/reducers/form.reducers.js","components/Sidebar/store/reducers/sidebar.reducer.js","components/Sidebar/store/reducers/index.js","store/reducers/index.js","store/store.js","components/Header/Header.jsx","components/Content/Content.jsx","App.jsx","index.js"],"names":["forecast","concat","settings","openWeatherKey","getForecast","id","axios","get","URL","params","appid","units","timeOut","SET_SELECTED_CITY","SET_DATA","SET_LOADING","SET_ERROR","SET_FILTERING","loadCity","dispatch","getState","setLoadingData","then","res","setData","data","list","map","element","date","Date","dt_txt","value","main","temp","clouds","all","setSelectedCity","city","catch","err","errorHandler","type","payload","state","setFilteringData","toastr","error","message","TOGGLE_SIDEBAR","SET_SIDEBAR_COLLAPSED","toggleSidebar","setSidebarCollapsed","initialState","selectedCity","loading","filtering","form","arguments","length","undefined","action","Actions","Object","objectSpread","collapsed","sidebar","rootReducer","combineReducers","toastrReducer","store","createStore","applyMiddleware","thunk","Sider","Layout","cityList","window","WmSidebar","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadedRowsMap","onClickCity","sidebarBreakpoint","console","log","handleChange","e","persist","setState","defineProperty","target","name","clearTimeout","setTimeout","filterWorker","postMessage","filter","workerResponse","result","handleInfiniteOnLoad","_ref","startIndex","stopIndex","i","warning","fetchData","results","isRowLoaded","_ref2","index","renderItem","_ref3","key","style","item","react_default","a","createElement","Item","className","onClick","country","filterValue","Worker","onmessage","_this2","_this$props","sidebarCollapsed","theme","breakpoint","collapsedWidth","onBreakpoint","trigger","collapsible","input","size","placeholder","onChange","ref","scrollTarget","classNames","spin","spinning","bordered","WindowScroller_default","scrollElement","_ref4","height","isScrolling","onChildScroll","scrollTop","AutoSizer_default","disableHeight","_ref5","width","List_default","autoHeight","onScroll","overscanRowCount","rowCount","rowHeight","rowRenderer","React","Component","connect","_ref7","bindActionCreators","setDisplayName","AntHeader","Header","Title","Typography","icon","level","margin","am4core","am4themes_animated","AntContent","Content","TabPane","Tabs","Text","oldProps","_","isEqual","chart","generate","am4charts","paddingLeft","dateAxis","xAxes","push","renderer","minGridDistance","baseInterval","timeUnit","count","dateFormats","setKey","valueAxis","yAxes","tooltip","disabled","minWidth","seriesTemperature","series","dataFields","dateX","valueY","tooltipText","seriesClouds","tooltipHTML","cursor","scrollbarX","dispose","wrapperClassName","tabs","defaultActiveKey","tab","forceRender","descriptions","column","xxl","xl","lg","md","sm","xs","label","coord","lat","lon","empty","description","App","layout","Sidebar","components_Header_Header","components_Content_Content","ReactDOM","render","es","src_App","lib_default","newestOnTop","position","transitionIn","transitionOut","closeOnToastrClick","document","getElementById"],"mappings":"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","file":"static/js/main.48cdd1c6.chunk.js","sourcesContent":["const API_BASE = 'https://api.openweathermap.org/data/2.5';\r\n\r\nconst forecast = `${API_BASE}/forecast`\r\n\r\nexport {\r\n    forecast\r\n}","export default {\r\n    openWeatherKey :'a6406e2d8df17080c159e36896fa1e1a'\r\n}","import axios from \"axios\";\r\nimport {settings, URL} from 'config';\r\n\r\nexport function getForecast(id) {\r\n    return axios.get(URL.forecast, {\r\n        params: {\r\n            id: id,\r\n            appid: settings.openWeatherKey,\r\n            units: 'metric'\r\n        }\r\n    })\r\n}","export const formatData = (array) => {\r\n    return array.map(element => {\r\n        return {\r\n            date: new Date(element.dt_txt),\r\n            value: element.main.temp,\r\n            clouds: element.clouds.all\r\n        }\r\n    })\r\n}","import React from 'react';\nimport WindowScroller from 'react-virtualized/dist/commonjs/WindowScroller';\nimport AutoSizer from 'react-virtualized/dist/commonjs/AutoSizer';\nimport VList from 'react-virtualized/dist/commonjs/List';\nimport {List, message, Layout, Spin} from 'antd';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {Input} from 'antd';\nimport 'react-virtualized/styles.css';\nimport {Actions} from 'store';\nimport classNames from 'classnames';\nconst {Sider} = Layout;\n\nconst cityList = window.cityList;\n\nlet timeOut;\nclass WmSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterValue: '',\n      data: [],\n    };\n  }\n  loadedRowsMap = {};\n\n  componentDidMount () {\n    let filterWorker = new Worker('webWorker.js');\n    filterWorker.onmessage = this.workerResponse;\n    console.log(cityList);\n    this.setState({data: cityList, filterWorker})\n  }\n\n  onClickCity = (city) => {\n    if (!this.props.loading) {\n      this.props.loadCity(city.id);\n      this.props.toggleSidebar();\n    }\n  }\n  sidebarBreakpoint = collapsed => {\n    console.log(collapsed)\n    this.props.setSidebarCollapsed(collapsed)\n  }\n\n  handleChange = (e) => {\n    e.persist();\n    let {filtering} = this.props;\n    if (!filtering) {\n      this.setState({[e.target.name]: e.target.value});\n      if (timeOut) {\n        clearTimeout(timeOut);\n      }\n      timeOut = setTimeout(() => {\n        this.props.setFilteringData(true);\n        this.state.filterWorker.postMessage({list: cityList, filter: e.target.value});\n        clearTimeout(timeOut);\n      }, 500);\n    }\n  }\n\n  workerResponse = (e) => {\n    this.setState({data: e.data.result});\n    this.props.setFilteringData(false);\n  }\n\n  handleInfiniteOnLoad = ({startIndex, stopIndex}) => {\n    let {data} = this.state;\n    this.setState({\n      loading: true,\n    });\n    for (let i = startIndex; i <= stopIndex; i++) {\n      // 1 means loading\n      this.loadedRowsMap[i] = 1;\n    }\n    if (data.length > 19) {\n      message.warning('Virtualized List loaded all');\n      this.setState({\n        loading: false,\n      });\n      return;\n    }\n    this.fetchData(res => {\n      data = data.concat(res.results);\n      this.setState({\n        data,\n        loading: false,\n      });\n    });\n  };\n\n  isRowLoaded = ({index}) => !!this.loadedRowsMap[index];\n\n  renderItem = ({index, key, style}) => {\n    const {data} = this.state;\n    const item = data[index];\n    return (\n      <List.Item key={key} style={style} className={'wm-sidebar-list-item'} onClick={e => this.onClickCity(item)}>\n        {`${item.name} - ${item.country}`}\n      </List.Item>\n    );\n  };\n\n  render () {\n    let {filtering, sidebarCollapsed} = this.props;\n    const {data} = this.state;\n    console.log(sidebarCollapsed);\n    return (\n      <Sider\n        theme=\"dark\"\n        className=\"wm-sider\"\n        breakpoint=\"md\"\n        collapsedWidth=\"0\"\n        onBreakpoint={this.sidebarBreakpoint}\n        trigger={null}\n        collapsible\n        collapsed={sidebarCollapsed}>\n        <div className='wm-sidebar' >\n          <div className='wm-sidebar-search'>\n            <Input\n              size='large'\n              placeholder='Start type city'\n              name='filterValue'\n              value={this.state.filterValue}\n              onChange={this.handleChange}\n            />\n          </div>\n\n          <div ref={ref => this.scrollTarget = ref} className={classNames('wm-sidebar-list', {'loading': filtering})}>\n            <Spin spinning={filtering}>\n              <List\n                size='small'\n                bordered\n              >\n                <WindowScroller\n                  scrollElement={this.scrollTarget}\n                >\n                  {({height, isScrolling, onChildScroll, scrollTop}) => (\n                    <AutoSizer disableHeight>\n                      {({width}) => (\n                        <VList\n                          autoHeight\n                          height={height}\n                          isScrolling={isScrolling}\n                          onScroll={onChildScroll}\n                          overscanRowCount={2}\n                          rowCount={data.length}\n                          rowHeight={30}\n                          rowRenderer={this.renderItem}\n                          scrollTop={scrollTop}\n                          width={width}\n                        />\n                      )}\n                    </AutoSizer>\n                  )}\n                </WindowScroller>\n              </List>\n            </Spin>\n          </div>\n        </div>\n      </Sider>\n    );\n  }\n}\n\nfunction mapDispatchToProps (dispatch) {\n  return bindActionCreators({\n    loadCity: Actions.loadCity,\n    setDisplayName: Actions.setDisplayName,\n    setData: Actions.setData,\n    setLoadingData: Actions.setLoadingData,\n    setFilteringData: Actions.setFilteringData,\n    toggleSidebar: Actions.toggleSidebar,\n    setSidebarCollapsed: Actions.setSidebarCollapsed\n  }, dispatch);\n}\n\nfunction mapStateToProps ({form, sidebar}) {\n  return {\n    sidebarCollapsed: sidebar.collapsed,\n    filtering: form.filtering\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WmSidebar);\n","import {forecast} from 'api';\r\nimport * as util from 'utl';\r\nimport {toastr} from 'ultumus-react-redux-toastr'\r\n\r\nexport const SET_SELECTED_CITY = 'SET_SELECTED_CITY';\r\nexport const SET_DATA = 'SET_DATA';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const SET_FILTERING = 'SET_FILTERING';\r\n\r\n\r\nexport const loadCity = id => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setLoadingData(true));\r\n        forecast.getForecast(id)\r\n            .then(res => {\r\n                dispatch(setData(util.formatData(res.data.list)));\r\n                dispatch(setSelectedCity(res.data.city));\r\n                dispatch(setLoadingData(false));\r\n            }).catch(err=>dispatch(errorHandler(err)));\r\n    }\r\n}\r\n\r\nexport const setSelectedCity = city => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_SELECTED_CITY,\r\n            payload: city,\r\n        })\r\n    }\r\n}\r\n\r\nexport const setData = data => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_DATA,\r\n            payload: data,\r\n        })\r\n    }\r\n}\r\n\r\nexport const setLoadingData = state => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_LOADING,\r\n            payload: state,\r\n        })\r\n    }\r\n}\r\n\r\nexport const setFilteringData = state => {\r\n    return (dispatch, getState) => {\r\n        dispatch({\r\n            type: SET_FILTERING,\r\n            payload: state,\r\n        })\r\n    }\r\n}\r\n\r\nconst errorHandler = err => {\r\n    return (dispatch, getState) => {\r\n        dispatch(setLoadingData(false));\r\n        toastr.error('Error!', err.message)\r\n    }\r\n}","export const TOGGLE_SIDEBAR = 'TOGGLE_SIDEBAR';\r\nexport const SET_SIDEBAR_COLLAPSED = 'SET_SIDEBAR_COLLAPSED';\r\n\r\nexport const toggleSidebar = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: TOGGLE_SIDEBAR\r\n        })\r\n    }\r\n}\r\nexport const setSidebarCollapsed = (state) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: SET_SIDEBAR_COLLAPSED,\r\n            payload: state\r\n        })\r\n    }\r\n}","import * as Actions from 'store/actions';\r\nconst initialState = {\r\n  selectedCity: {},\r\n  data:[],\r\n  loading:false,\r\n  filtering:false\r\n}\r\n\r\nconst form = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case Actions.SET_SELECTED_CITY: {\r\n      return {\r\n        ...state,\r\n        selectedCity: action.payload,\r\n      };\r\n    }\r\n\r\n    case Actions.SET_DATA: {\r\n      return {\r\n        ...state,\r\n        data: action.payload,\r\n      };\r\n    }\r\n\r\n    case Actions.SET_LOADING: {\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      };\r\n    }\r\n\r\n    case Actions.SET_FILTERING: {\r\n      return {\r\n        ...state,\r\n        filtering: action.payload,\r\n      };\r\n    }\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default form;\r\n","import * as Actions from '../actions';\r\nconst initialState = {\r\n  collapsed: true\r\n}\r\n\r\nconst sidebar = (state = initialState, action) => {\r\n  switch (action.type) {\r\n\r\n    case Actions.TOGGLE_SIDEBAR: {\r\n      return {\r\n        ...state,\r\n        collapsed: !state.collapsed,\r\n      };\r\n    }\r\n\r\n    case Actions.SET_SIDEBAR_COLLAPSED: {\r\n      return {\r\n        ...state,\r\n        collapsed: action.payload,\r\n      };\r\n    }\r\n    \r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport default sidebar;\r\n","import sidebar from './sidebar.reducer';\r\n\r\n\r\nexport default sidebar;","import {combineReducers} from 'redux';\r\nimport {reducer as toastrReducer} from 'ultumus-react-redux-toastr'\r\n\r\nimport form from './form.reducers';\r\nimport sidebar from 'components/Sidebar/store/reducers';\r\n\r\nconst rootReducer = combineReducers({\r\n    form,\r\n    sidebar,\r\n    toastr:toastrReducer\r\n});\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport {rootReducer} from 'store'\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    applyMiddleware(thunk)\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {bindActionCreators} from 'redux';\r\nimport {Layout, Typography, Icon} from 'antd';\r\nimport {Actions} from 'store';\r\nconst {Header: AntHeader} = Layout;\r\nconst {Title} = Typography;\r\nclass Header extends React.Component {\r\n\r\n  render () {\r\n    let {selectedCity,sidebarCollapsed} = this.props;\r\n    return (\r\n      <AntHeader className=\"wm-header\">\r\n        <Icon\r\n          className=\"wm-header-trigger\"\r\n          type={sidebarCollapsed ? 'menu-unfold' : 'menu-fold'}\r\n          onClick={this.props.toggleSidebar}\r\n        />\r\n        <Title level={2}  className=\"wm-header-city\" style={{margin: 0}}>\r\n          {selectedCity.name}\r\n        </Title>\r\n      </AntHeader>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch) {\r\n  return bindActionCreators({\r\n    toggleSidebar: Actions.toggleSidebar\r\n  }, dispatch);\r\n}\r\n\r\nfunction mapStateToProps ({form,sidebar}) {\r\n  return ({\r\n    selectedCity: form.selectedCity,\r\n    sidebarCollapsed: sidebar.collapsed\r\n  });\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\r\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {\n  Layout,\n  Empty,\n  Tabs,\n  Typography,\n  Spin,\n  Descriptions\n} from 'antd';\nimport moment from 'moment'\nimport classNames from 'classnames';\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport _ from 'underscore';\n\nam4core.useTheme(am4themes_animated);\nconst {Content: AntContent} = Layout;\nconst {TabPane} = Tabs;\nconst {Text } = Typography;\n\nclass Content extends React.Component {\n\n  componentDidUpdate (oldProps) {\n    if (!_.isEqual(oldProps.data, this.props.data)) {\n      if (!this.chart) {\n        this.generate();\n      } else {\n        this.chart.data = this.props.data;\n      }\n    }\n  }\n\n  componentDidMount () {\n    if (this.props.data.length) {\n      this.generate();\n    }\n  }\n\n  generate () {\n    let chart = am4core.create(\"amChart\", am4charts.XYChart);\n    chart.paddingLeft = 0\n    chart.paddingLeft = 0\n\n    let dateAxis = chart.xAxes.push(new am4charts.DateAxis());\n    // Set date label formatting\n    dateAxis.renderer.minGridDistance = 120;\n    dateAxis.baseInterval = {timeUnit: \"hour\", count: 3}\n    dateAxis.dateFormats.setKey(\"hour\", \"MMMM dd HH:mm\");\n\n    let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    valueAxis.tooltip.disabled = true;\n    valueAxis.renderer.minWidth = 35;\n\n    let seriesTemperature = chart.series.push(new am4charts.LineSeries());\n    seriesTemperature.dataFields.dateX = \"date\";\n    seriesTemperature.dataFields.valueY = \"value\";\n    seriesTemperature.tooltipText = \"Temperature: {valueY.value} °C\";\n\n    let seriesClouds = chart.series.push(new am4charts.LineSeries());\n    seriesClouds.dataFields.dateX = \"date\";\n    seriesClouds.dataFields.valueY = \"clouds\";\n    seriesClouds.tooltipHTML = \"Clouds: {valueY.value}%\";\n\n    chart.cursor = new am4charts.XYCursor();\n\n    let scrollbarX = new am4charts.XYChartScrollbar();\n    scrollbarX.series.push(seriesTemperature);\n    chart.scrollbarX = scrollbarX;\n    chart.data = this.props.data;\n    this.chart = chart;\n  }\n  componentWillUnmount () {\n    if (this.chart) {\n      this.chart.dispose();\n    }\n  }\n\n  render () {\n    const {data, loading, selectedCity} = this.props;\n    console.log(selectedCity);\n    return (\n      <AntContent className=\"wm-content\">\n        <Spin spinning={loading} wrapperClassName=\"wm-content-spinner\">\n          <Tabs defaultActiveKey=\"1\" className=\"wm-content-tabs\">\n            <TabPane tab=\"Info\" key=\"1\" className=\"wm-content-tab\"forceRender>\n              {!data.length ?\n                <Empty\n                  description={\n                    <Text>\n                      Select city from list\n                    </Text>\n                  } />\n                :\n                <div style={{width:'100%',height:'100%'}}>\n                  <Descriptions\n                    bordered\n                    column={{xxl: 1, xl: 1, lg: 1, md: 1, sm: 1, xs: 1}}\n                  >\n                    <Descriptions.Item label=\"City\">{selectedCity.name}</Descriptions.Item>\n                    <Descriptions.Item label=\"Country\">{selectedCity.country}</Descriptions.Item>\n                    <Descriptions.Item label=\"Timezone\">{selectedCity.name}</Descriptions.Item>\n                    <Descriptions.Item label=\"Lat&Lon\">{selectedCity.coord?`${selectedCity.coord.lat}, ${selectedCity.coord.lon}`:null}</Descriptions.Item>\n                  </Descriptions>\n                </div>\n              }\n            </TabPane>\n            <TabPane tab=\"Temperature\" key=\"2\" className=\"wm-content-tab\" forceRender>\n              {!data.length ?\n                <Empty description={\n                  <Text>\n                    Select city from list\n                </Text>\n                } />\n                :\n                <div className=\"wm-graph\">\n                  <div className={classNames('wm-graph-wrapper')}>\n                    <div id=\"amChart\"></div>\n                  </div>\n                </div>\n              }\n            </TabPane>\n          </Tabs>\n        </Spin>\n      </AntContent>\n    );\n  }\n}\n\n\nfunction mapStateToProps ({form}) {\n  return ({\n    data: form.data,\n    selectedCity: form.selectedCity,\n    loading: form.loading\n  });\n}\n\nexport default connect(mapStateToProps)(Content);\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Layout} from 'antd';\r\nimport Sidebar from 'components/Sidebar/Sidebar';\r\nimport Header from 'components/Header/Header';\r\nimport Content from 'components/Content/Content';\r\n\r\nclass App extends React.Component {\r\n\r\n\trender () {\r\n\t\treturn (\r\n\t\t\t<Layout className=\"wm-layout\">\r\n\t\t\t\t<Sidebar />\r\n\t\t\t\t<Layout className=\"wm-layout-content\">\r\n\t\t\t\t\t<Header />\r\n\t\t\t\t\t<Content />\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t);\r\n\t}\r\n}\r\n\r\n\r\nfunction mapStateToProps ({form}) {\r\n\treturn ({\r\n\t\tloading: form.loading\r\n\t});\r\n}\r\n\r\nexport default connect(mapStateToProps)(App);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport ReduxToastr from 'ultumus-react-redux-toastr';\nimport 'ultumus-react-redux-toastr/lib/css/react-redux-toastr.min.css';\nimport \"antd/dist/antd.css\";\nimport {store} from 'store';\n\nimport App from './App';\nimport './index.sass'\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n        <ReduxToastr\n            timeOut={4000}\n            newestOnTop={false}\n            position=\"bottom-right\"\n            transitionIn=\"fadeIn\"\n            transitionOut=\"fadeOut\"\n            closeOnToastrClick\n        />\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}